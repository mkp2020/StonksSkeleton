{"ast":null,"code":"import \"source-map-support/register\";\nimport unirest from \"unirest\";\nimport handler from \"./libs/handler-lib\"; // Test with: serverless invoke local --function stock-info -p mocks/stock-info.json\n\nexport const main = handler(async (event, context) => {\n  // You would use this for something that is not a GET request\n  // const data = JSON.parse(event.body);\n  // This gets symbols from the path parameters (assuming they are sent as a stringified JSON list)\n  // const symbols = JSON.parse(event.queryParameters.symbols);\n  const symbols = JSON.parse(event.queryParameters).symbols; // This combines the JSON list into a comma separated string as specified by the API docs\n  // Use the API whose documentation is at this URL!\n  // https://rapidapi.com/apidojo/api/yahoo-finance1?endpoint=apiendpoint_33e0cec5-0f8a-4f9f-a6dc-018e6762fbe7\n\n  var req = unirest(\"GET\", \"https://apidojo-yahoo-finance-v1.p.rapidapi.com/market/v2/get-quotes\");\n  req.query({\n    \"region\": \"US\",\n    \"symbols\": symbols\n  });\n  req.headers({\n    \"x-rapidapi-key\": process.env.RAPIDAPI_KEY,\n    \"x-rapidapi-host\": process.env.RAPIDAPI_HOST,\n    \"useQueryString\": true\n  });\n  req.end(function (res) {\n    if (res.error) throw new Error(res.error);\n    console.log(JSON.stringify(res.body)); // Return the result as JSON\n\n    return res.body;\n  });\n});","map":{"version":3,"sources":["/Users/mallikaparulekar/Desktop/CS/StonksSkeleton/backend/stock-info.js"],"names":["unirest","handler","main","event","context","symbols","JSON","parse","queryParameters","req","query","headers","process","env","RAPIDAPI_KEY","RAPIDAPI_HOST","end","res","error","Error","console","log","stringify","body"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB,C,CACA;;AACA,OAAO,MAAMC,IAAI,GAAGD,OAAO,CAAC,OAAOE,KAAP,EAAcC,OAAd,KAA0B;AACpD;AACA;AACA;AACA;AACA,QAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACK,eAAjB,EAAkCH,OAAlD,CALoD,CAMpD;AACA;AACA;;AACA,MAAII,GAAG,GAAGT,OAAO,CAAC,KAAD,EAAQ,sEAAR,CAAjB;AACAS,EAAAA,GAAG,CAACC,KAAJ,CAAU;AACR,cAAU,IADF;AAER,eAAWL;AAFH,GAAV;AAIAI,EAAAA,GAAG,CAACE,OAAJ,CAAY;AACV,sBAAkBC,OAAO,CAACC,GAAR,CAAYC,YADpB;AAEV,uBAAmBF,OAAO,CAACC,GAAR,CAAYE,aAFrB;AAGV,sBAAkB;AAHR,GAAZ;AAKAN,EAAAA,GAAG,CAACO,GAAJ,CAAQ,UAAUC,GAAV,EAAe;AACrB,QAAIA,GAAG,CAACC,KAAR,EAAe,MAAM,IAAIC,KAAJ,CAAUF,GAAG,CAACC,KAAd,CAAN;AACfE,IAAAA,OAAO,CAACC,GAAR,CAAYf,IAAI,CAACgB,SAAL,CAAeL,GAAG,CAACM,IAAnB,CAAZ,EAFqB,CAGrB;;AACA,WAAON,GAAG,CAACM,IAAX;AACD,GALD;AAMD,CAzB0B,CAApB","sourcesContent":["import unirest from \"unirest\";\nimport handler from \"./libs/handler-lib\";\n// Test with: serverless invoke local --function stock-info -p mocks/stock-info.json\nexport const main = handler(async (event, context) => {\n  // You would use this for something that is not a GET request\n  // const data = JSON.parse(event.body);\n  // This gets symbols from the path parameters (assuming they are sent as a stringified JSON list)\n  // const symbols = JSON.parse(event.queryParameters.symbols);\n  const symbols = JSON.parse(event.queryParameters).symbols;\n  // This combines the JSON list into a comma separated string as specified by the API docs\n  // Use the API whose documentation is at this URL!\n  // https://rapidapi.com/apidojo/api/yahoo-finance1?endpoint=apiendpoint_33e0cec5-0f8a-4f9f-a6dc-018e6762fbe7\n  var req = unirest(\"GET\", \"https://apidojo-yahoo-finance-v1.p.rapidapi.com/market/v2/get-quotes\");\n  req.query({\n    \"region\": \"US\",\n    \"symbols\": symbols\n  });\n  req.headers({\n    \"x-rapidapi-key\": process.env.RAPIDAPI_KEY,\n    \"x-rapidapi-host\": process.env.RAPIDAPI_HOST,\n    \"useQueryString\": true\n  });\n  req.end(function (res) {\n    if (res.error) throw new Error(res.error);\n    console.log(JSON.stringify(res.body));\n    // Return the result as JSON\n    return res.body;\n  });\n});"]},"metadata":{},"sourceType":"module"}