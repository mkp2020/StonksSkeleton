{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mallikaparulekar/Desktop/CS/StonksSkeleton/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Auth } from \"aws-amplify\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./App.css\";\nimport Routes from \"./Routes\";\nimport { AppContext } from \"./libs/contextLib\";\nimport { onError } from \"./libs/errorLib\";\n\nfunction App() {\n  _s();\n\n  // TODO Authentication state code here\n  const [isAuthenticated, isAuthenticating, userHasAuthenticated] = [false, false, () => null]; // Enables React Router history use\n\n  const history = useHistory(); // TODO add a useEffect for onLoad which will happen exactly once.\n\n  async function onLoad() {\n    try {// TODO make call to authenticate\n      // Set state to authenticated\n    } catch (e) {\n      if (e !== 'No current user') {\n        onError(e);\n      }\n    } // TODO set state to is authenticating\n\n  }\n\n  async function handleLogout() {\n    // TODO Amplify Auth call\n    // Set Authentication State\n    history.push(\"/login\");\n  } // This is set up to return a Navbar which uses bootstrap styling based on the authenticated/authenticating states of this program.\n  // Below that is a react-router object using a context provider hook (see libs/contextLib.js) to send authentication status.\n\n\n  return !isAuthenticating && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      collapseOnSelect: true,\n      bg: \"light\",\n      expand: \"md\",\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(LinkContainer, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          className: \"font-weight-bold text-muted\",\n          children: \"Stonks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n        className: \"justify-content-end\",\n        children: /*#__PURE__*/_jsxDEV(Nav, {\n          activeKey: window.location.pathname,\n          children: isAuthenticated ? /*#__PURE__*/_jsxDEV(Nav.Link, {\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(LinkContainer, {\n              to: \"/signup\",\n              children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                children: \"Signup\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(LinkContainer, {\n              to: \"/login\",\n              children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        isAuthenticated,\n        userHasAuthenticated\n      },\n      children: /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mallikaparulekar/Desktop/CS/StonksSkeleton/frontend/src/App.js"],"names":["React","useState","useEffect","Navbar","Nav","LinkContainer","Auth","useHistory","Routes","AppContext","onError","App","isAuthenticated","isAuthenticating","userHasAuthenticated","history","onLoad","e","handleLogout","push","window","location","pathname"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX;AACF,QAAM,CAACC,eAAD,EAAkBC,gBAAlB,EAAoCC,oBAApC,IAA4D,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAM,IAArB,CAAlE,CAHa,CAKb;;AACA,QAAMC,OAAO,GAAGR,UAAU,EAA1B,CANa,CAQb;;AAEA,iBAAeS,MAAf,GAAwB;AACtB,QAAI,CACF;AACA;AACD,KAHD,CAIA,OAAMC,CAAN,EAAS;AACP,UAAIA,CAAC,KAAK,iBAAV,EAA6B;AAC3BP,QAAAA,OAAO,CAACO,CAAD,CAAP;AACD;AACF,KATqB,CAWtB;;AACD;;AAED,iBAAeC,YAAf,GAA8B;AAC5B;AACA;AAEAH,IAAAA,OAAO,CAACI,IAAR,CAAa,QAAb;AACD,GA7BY,CA+Bb;AACA;;;AACA,SACE,CAACN,gBAAD,iBACE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA,4BAGE,QAAC,MAAD;AAAQ,MAAA,gBAAgB,MAAxB;AAAyB,MAAA,EAAE,EAAC,OAA5B;AAAoC,MAAA,MAAM,EAAC,IAA3C;AAAgD,MAAA,SAAS,EAAC,MAA1D;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,EAAE,EAAC,GAAlB;AAAA,+BACE,QAAC,MAAD,CAAQ,KAAR;AAAc,UAAA,SAAS,EAAC,6BAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,MAAD,CAAQ,MAAR;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,MAAD,CAAQ,QAAR;AAAiB,QAAA,SAAS,EAAC,qBAA3B;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAEO,MAAM,CAACC,QAAP,CAAgBC,QAAhC;AAAA,oBACGV,eAAe,gBACd,QAAC,GAAD,CAAK,IAAL;AAAU,YAAA,OAAO,EAAEM,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADc,gBAGd;AAAA,oCACE,QAAC,aAAD;AAAe,cAAA,EAAE,EAAC,SAAlB;AAAA,qCACE,QAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,aAAD;AAAe,cAAA,EAAE,EAAC,QAAlB;AAAA,qCACE,QAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eA4BE,QAAC,UAAD,CAAY,QAAZ;AAAqB,MAAA,KAAK,EAAE;AAAEN,QAAAA,eAAF;AAAmBE,QAAAA;AAAnB,OAA5B;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAoCD;;GArEQH,G;UAMSJ,U;;;KANTI,G;AAuET,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Auth } from \"aws-amplify\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Routes from \"./Routes\";\nimport { AppContext } from \"./libs/contextLib\";\nimport { onError } from \"./libs/errorLib\";\n\nfunction App() {\n\n    // TODO Authentication state code here\n  const [isAuthenticated, isAuthenticating, userHasAuthenticated] = [false, false, () => null];\n\n  // Enables React Router history use\n  const history = useHistory();\n\n  // TODO add a useEffect for onLoad which will happen exactly once.\n  \n  async function onLoad() {\n    try {\n      // TODO make call to authenticate\n      // Set state to authenticated\n    }\n    catch(e) {\n      if (e !== 'No current user') {\n        onError(e);\n      }\n    }\n  \n    // TODO set state to is authenticating\n  }\n\n  async function handleLogout() {\n    // TODO Amplify Auth call\n    // Set Authentication State\n\n    history.push(\"/login\");\n  }\n\n  // This is set up to return a Navbar which uses bootstrap styling based on the authenticated/authenticating states of this program.\n  // Below that is a react-router object using a context provider hook (see libs/contextLib.js) to send authentication status.\n  return (\n    !isAuthenticating && (\n      <div className=\"\">\n        {/* You can change the styling on Navbar and other Bootstrap components by changing props!\n        Take a look at the react-bootstrap docs: https://react-bootstrap.github.io/components/alerts */}\n        <Navbar collapseOnSelect bg=\"light\" expand=\"md\" className=\"mb-3\">\n          <LinkContainer to=\"/\">\n            <Navbar.Brand className=\"font-weight-bold text-muted\">\n              Stonks\n            </Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle />\n          <Navbar.Collapse className=\"justify-content-end\">\n            <Nav activeKey={window.location.pathname}>\n              {isAuthenticated ? (\n                <Nav.Link onClick={handleLogout}>Logout</Nav.Link>\n              ) : (\n                <>\n                  <LinkContainer to=\"/signup\">\n                    <Nav.Link>Signup</Nav.Link>\n                  </LinkContainer>\n                  <LinkContainer to=\"/login\">\n                    <Nav.Link>Login</Nav.Link>\n                  </LinkContainer>\n                </>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n\n        <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\n          <Routes />\n        </AppContext.Provider>\n      </div>\n    )\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}